import json
from src.utils import call_model
from src.utils.graph_db_utils import create_query
from datetime import datetime
from src.agents import Agent, agent_metadata
from .tool import tool_metadata
from .types import Parameter
from src.agents.graph_schema import graph_schema, narrative_options



current_user = "John Doe"

data_store_prompt = f"""
You are an expert in NEO4J and generating CYPHER queries. Help create cypher queries in json format
{{question: question provided by the user, query: cypher query}}.

If you cannot make a query, query should just say "None"

Only use relationships that are present in the schema below. Do not under any circumstances create new relationships.

If the user asks about spending on X. Check whether this is one of the narrative options: {narrative_options}

You are only able to make queries that search for information, you are not able to create, or delete or update entries

Here is the graph schema:
{graph_schema}

The current date and time is {datetime.now()}

The current user is {current_user}
"""
@tool_metadata(
    name="last month data",
    description="Get spending for the last month on a merchant",
    parameters={
        "merchant_name": Parameter(
            type="string",
            description="Merchant name eg. Aldi",
        )
    },
)

def generate_cypher(user_prompt: str):
    llm_query = call_model(data_store_prompt, user_prompt)
    json_query = json.loads(llm_query)
    print(json_query) # cypher generated by the LLM
    if json_query["query"] == "None":
        return "No database query"
    db_response = create_query(json_query['query'])
    return db_response

@agent_metadata(
    name="DatastoreAgent",
    description="This agent is responsible for handling database queries.",
    prompt=data_store_prompt,
    tools=[generate_cypher],
)
class DatastoreAgent(Agent):
    pass


